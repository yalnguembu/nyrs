"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.router = void 0;
const express_1 = require("express");
const express_2 = __importDefault(require("express"));
const multer_1 = __importDefault(require("multer"));
const upload = (0, multer_1.default)({ dest: `${__dirname}/public/images/services/` });
const auth_1 = require("../modules/auth");
const users_1 = require("../modules/users");
const services_1 = require("../modules/services");
const categories_1 = require("../modules/categories");
const reservations_1 = require("../modules/reservations");
const middelwares_1 = require("../middelwares");
const utils_1 = require("../utils");
exports.router = (0, express_1.Router)();
exports.router.post("/auth/login", auth_1.AuthController.login);
exports.router.post("/auth/register", auth_1.AuthController.register);
exports.router.post("/auth/verify-token", auth_1.AuthController.verifyToken);
exports.router.use("/storage", express_2.default.static("public"));
exports.router.get("/user/:id", middelwares_1.isUserConnected, users_1.UserController.getById);
exports.router.put("/user/:id", middelwares_1.isUserConnected, users_1.UserController.update);
exports.router.delete("/user/:id", middelwares_1.isUserConnected, users_1.UserController.delete);
exports.router.get("/users", middelwares_1.isUserConnected, middelwares_1.isUserAdmin, users_1.UserController.getAll);
exports.router.post("/category", middelwares_1.isUserConnected, middelwares_1.isUserAdmin, categories_1.CategoryController.create);
exports.router.put("/category/:id", middelwares_1.isUserConnected, middelwares_1.isUserAdmin, categories_1.CategoryController.update);
exports.router.delete("/category/:id", middelwares_1.isUserConnected, middelwares_1.isUserAdmin, categories_1.CategoryController.delete);
exports.router.get("/categories", middelwares_1.isUserConnected, middelwares_1.isUserAdmin, categories_1.CategoryController.getAll);
exports.router.post("/service", middelwares_1.isUserConnected, middelwares_1.isUserAdmin, middelwares_1.uploadServiceImage.single("picture"), services_1.ServiceController.create);
exports.router.get("/service/:id", middelwares_1.isUserConnected, services_1.ServiceController.getById);
exports.router.put("/service/:id", middelwares_1.isUserConnected, middelwares_1.isUserAdmin, middelwares_1.uploadServiceImage.single("picture"), services_1.ServiceController.update);
exports.router.delete("/service/:id", middelwares_1.isUserConnected, middelwares_1.isUserAdmin, services_1.ServiceController.delete);
exports.router.get("/services", middelwares_1.isUserConnected, services_1.ServiceController.getAll);
exports.router.post("/reservation", middelwares_1.isUserConnected, reservations_1.ReservationController.create);
exports.router.get("/reservations", middelwares_1.isUserConnected, reservations_1.ReservationController.getAll);
exports.router.get("/reservations/archived", middelwares_1.isUserConnected, reservations_1.ReservationController.getArchived);
exports.router.put("/reservation/:id", middelwares_1.isUserConnected, reservations_1.ReservationController.update);
exports.router.delete("/reservation/:id", middelwares_1.isUserConnected, reservations_1.ReservationController.delete);
exports.router.get("/reservation/:id", middelwares_1.isUserConnected, reservations_1.ReservationController.getById);
exports.router.put("/reservation/:id/cancel", middelwares_1.isUserConnected, reservations_1.ReservationController.cancel);
exports.router.use("*", (req, res, next) => {
    next(new utils_1.NotFoundError(`'${req.baseUrl}'`));
});
exports.router.use(utils_1.ErrorHandler.handle());
